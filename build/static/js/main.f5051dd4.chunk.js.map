{"version":3,"sources":["styles.module.css","components/searchbar/Searchbar.js","components/imageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGallery.js","components/Loader/Loader.js","components/button/Button.js","components/modal/Modal.js","components/App.js","index.js"],"names":["module","exports","Searchbar","getSearch","className","styles","SearchForm","onSubmit","e","preventDefault","FormData","target","forEach","value","name","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","ImageGalleryItem","fetchImages","toggleModal","imageObj","console","log","onClick","webformatURL","src","alt","ImageGalleryItemImage","ImageGallery","gallery","map","id","LoaderSpinner","BtnWrap","color","height","width","Button","getImages","Modal","hiddenModal","largeImageURL","Overlay","currentTarget","axios","defaults","baseURL","App","state","search","page","error","showModal","loading","originalImageURL","setState","get","process","REACT_APP_API_KEY","then","response","prevState","data","hits","finally","window","scrollTo","top","document","documentElement","scrollHeight","behavior","ShowModal","url","this","prevProps","length","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f5051dd4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"styles_App__3p8tP\",\"Searchbar\":\"styles_Searchbar__2xgpS\",\"SearchForm\":\"styles_SearchForm__t0afO\",\"SearchFormButton\":\"styles_SearchFormButton__1kiuk\",\"SearchFormButton-label\":\"styles_SearchFormButton-label__3JPS3\",\"SearchFormInput\":\"styles_SearchFormInput__2gYuu\",\"ImageGallery\":\"styles_ImageGallery__QYWBT\",\"ImageGalleryItem\":\"styles_ImageGalleryItem__3CCAw\",\"ImageGalleryItemImage\":\"styles_ImageGalleryItemImage__2W0TY\",\"Overlay\":\"styles_Overlay__105FB\",\"Modal\":\"styles_Modal__1Zngg\",\"Button\":\"styles_Button__1BhWR\",\"BtnWrap\":\"styles_BtnWrap__1Byia\"};","import React from 'react';\r\nimport styles from '../../styles.module.css';\r\n\r\nexport function Searchbar({ getSearch }) {\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    formData.forEach((value, name) => {\r\n      getSearch(value);\r\n    });\r\n  };\r\n  return (\r\n    <header className={styles.Searchbar}>\r\n      <form className={styles.SearchForm} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={styles.SearchFormButton}>\r\n          <span className={styles.SearchFormButtonLabel}></span>\r\n        </button>\r\n\r\n        <input\r\n          className={styles.SearchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          name=\"search\"\r\n          placeholder=\"Search images and photos\"\r\n        ></input>\r\n      </form>\r\n    </header>\r\n  );\r\n}","import React from 'react';\r\nimport styles from '../../styles.module.css';\r\n\r\nexport function ImageGalleryItem({ fetchImages, toggleModal, imageObj }) {\r\n  console.log(imageObj);\r\n  const handleClick = () => {\r\n    toggleModal();\r\n    fetchImages(imageObj.webformatURL);\r\n  };\r\n  return (\r\n    <li className={styles.ImageGalleryItem}>\r\n      <img\r\n        onClick={handleClick}\r\n        src={imageObj.webformatURL}\r\n        alt=\"GalleryImage\"\r\n        className={styles.ImageGalleryItemImage}\r\n      />\r\n    </li>\r\n  );\r\n}","import React from 'react';\r\nimport { ImageGalleryItem } from '../imageGalleryItem/ImageGalleryItem';\r\nimport styles from '../../styles.module.css';\r\n\r\nexport function ImageGallery({ fetchImages, gallery, toggleModal }) {\r\n  return (\r\n    <ul className={styles.ImageGallery}>\r\n      {gallery.map(imageObj => (\r\n        <ImageGalleryItem\r\n          fetchImages={fetchImages}\r\n          toggleModal={toggleModal}\r\n          imageObj={imageObj}\r\n          key={imageObj.id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport styles from '../../styles.module.css';\r\n\r\nexport function LoaderSpinner() {\r\n  return (\r\n    <div className={styles.BtnWrap}>\r\n      <Loader type=\"ThreeDots\" color=\"#303f9f\" height={50} width={50} />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport styles from '../../styles.module.css';\r\n\r\nexport function Button({ getImages }) {\r\n  return (\r\n    <div className={styles.BtnWrap}>\r\n      <button className={styles.Button} onClick={getImages}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport styles from '../../styles.module.css';\r\n\r\nexport function Modal({ hiddenModal, largeImageURL }) {\r\n  const handleClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      hiddenModal();\r\n    }\r\n  };\r\n  return (\r\n    <div className={styles.Overlay} onClick={handleClick}>\r\n      <div className={styles.Modal}>\r\n        <img src={largeImageURL} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { Searchbar } from './searchbar/Searchbar';\r\nimport { ImageGallery } from './imageGallery/ImageGallery';\r\n\r\nimport { LoaderSpinner } from './Loader/Loader';\r\nimport { Button } from './button/Button';\r\nimport { Modal } from './modal/Modal';\r\nimport styles from '../styles.module.css';\r\n\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api';\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    gallery: [],\r\n    search: '',\r\n    page: 1,\r\n    error: null,\r\n    showModal: false,\r\n    loading: false,\r\n    originalImageURL: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.search) {\r\n      this.getImages(this.state.search);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.search !== prevState.search) {\r\n      this.getImages(this.state.search);\r\n    }\r\n  }\r\n\r\n  getImages = () => {\r\n    this.setState({ loading: true });\r\n\r\n    axios\r\n      .get(\r\n        `/?q=${this.state.search}&page=${this.state.page}&key=${process.env.REACT_APP_API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n      )\r\n      .then(response => {\r\n        this.setState(prevState => ({\r\n          gallery: [...prevState.gallery, ...response.data.hits],\r\n          loading: false,\r\n          page: prevState.page + 1,\r\n        }));\r\n      })\r\n      .finally(() => {\r\n        this.setState({ loading: false });\r\n\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n      });\r\n  };\r\n\r\n  getSearch = search => {\r\n    this.setState({ search, gallery: [], page: 1 });\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ ShowModal }) => ({ showModal: !ShowModal }));\r\n  };\r\n\r\n  hiddenModal = () => {\r\n    this.setState({ showModal: false });\r\n  };\r\n\r\n  fetchImages = url => {\r\n    this.setState({ originalImageURL: url });\r\n  };\r\n\r\n  render() {\r\n    const { originalImageURL, loading, gallery, showModal } = this.state;\r\n\r\n    return (\r\n      <div className={styles.App}>\r\n        <Searchbar getSearch={this.getSearch} />\r\n        <ImageGallery\r\n          fetchImages={this.fetchImages}\r\n          toggleModal={this.toggleModal}\r\n          gallery={gallery}\r\n        />\r\n        {loading && <LoaderSpinner />}\r\n        {gallery.length > 0 && !loading && (\r\n          <Button getImages={this.getImages} />\r\n        )}\r\n        {showModal && (\r\n          <Modal\r\n            hiddenModal={this.hiddenModal}\r\n            largeImageURL={originalImageURL}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.module.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}